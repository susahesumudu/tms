# Generated by Django 5.1.4 on 2024-12-25 06:39

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0002_rename_module_duration_days_task_task_duration_days'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_name', models.CharField(max_length=100)),
                ('activity_code', models.CharField(max_length=10)),
                ('description', models.TextField()),
                ('activity_type', models.CharField(choices=[('Exercise', 'Exercise'), ('Assignment', 'Assignment'), ('Project', 'Project'), ('Demonstration', 'Demonstration'), ('Lecture', 'Lecture'), ('Group', 'Group')], max_length=15)),
                ('mode', models.CharField(choices=[('Online', 'Online'), ('Video', 'Video'), ('Physical', 'Physical')], max_length=10)),
                ('minutes', models.FloatField()),
                ('submission_deadline', models.DateTimeField()),
                ('session_type', models.CharField(choices=[('Theory', 'Theory'), ('Practical', 'Practical')], max_length=10)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_task', to='courses.task')),
            ],
        ),
        migrations.CreateModel(
            name='CommonEfficacyQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='GradingRubric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criteria', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('max_points', models.FloatField()),
                ('points_awarded', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentActivity',
            fields=[
                ('activity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='activities.activity')),
                ('assessment_type', models.CharField(choices=[('MCQ', 'MCQ'), ('Presentation', 'Presentation'), ('Project', 'Project'), ('Demonstration', 'Demonstration'), ('Assingment', 'Assingment')], max_length=100)),
                ('max_marks', models.FloatField()),
            ],
            bases=('activities.activity',),
        ),
        migrations.CreateModel(
            name='LearningActivity',
            fields=[
                ('activity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='activities.activity')),
                ('learning_goal', models.TextField()),
                ('is_required', models.BooleanField(default=True)),
            ],
            bases=('activities.activity',),
        ),
        migrations.CreateModel(
            name='PracticingActivity',
            fields=[
                ('activity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='activities.activity')),
                ('practice_type', models.CharField(max_length=100)),
                ('is_assessment_related', models.BooleanField(default=False)),
            ],
            bases=('activities.activity',),
        ),
        migrations.AddField(
            model_name='activity',
            name='efficacy_questions',
            field=models.ManyToManyField(blank=True, to='activities.commonefficacyquestion'),
        ),
        migrations.CreateModel(
            name='MarksTracker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daily_marks', models.FloatField(default=0.0)),
                ('weekly_marks', models.FloatField(default=0.0)),
                ('monthly_marks', models.FloatField(default=0.0)),
                ('course_wise_marks', models.FloatField(default=0.0)),
                ('final_grade', models.CharField(max_length=10)),
                ('final_assessment_score', models.FloatField(blank=True, null=True)),
                ('tasks_completed', models.IntegerField(default=0)),
                ('exercises_completed', models.IntegerField(default=0)),
                ('on_time_completion', models.BooleanField(default=False)),
                ('practical_hours', models.FloatField(default=0.0)),
                ('theory_hours', models.FloatField(default=0.0)),
                ('num_of_prev_attempts', models.IntegerField(default=0)),
                ('industry_training_experience', models.FloatField(default=0.0)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_file', models.FileField(upload_to='submissions/')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('marks', models.FloatField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('on_time_completion', models.BooleanField(default=False)),
                ('marks_awarded', models.FloatField(default=0.0)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='activities.activity')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
